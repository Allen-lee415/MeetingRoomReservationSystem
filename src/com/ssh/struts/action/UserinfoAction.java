/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.ssh.struts.action;

import java.io.IOException;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.springframework.web.bind.support.SessionAttributeStore;

import com.ssh.hibernate.Userinfo;
import com.ssh.hibernate.UserinfoDAO;
import com.ssh.struts.form.UserinfoForm;

/** 
 * MyEclipse Struts
 * Creation date: 04-19-2014
 * 
 * XDoclet definition:
 * @struts.action path="/userinfo" name="userinfoForm" input="/form/userinfo.jsp" scope="request" validate="true"
 */
public class UserinfoAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward add(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		UserinfoForm userinfoForm = (UserinfoForm) form;// TODO Auto-generated method stub
	   System.out.println("into add action");
	   int num=uiDao.count()+1;
	   System.out.println(num);
	   String id;
	   if(num<10){
	    id="YH00"+num;
	   }else if(10<=num&&num<100){
		id="YH0"+num; 
	   }else{
		id="YH"+num;
	   }
	   System.out.println(userinfoForm.getUserName());
	   user.setUserId(id);
	   user.setUserName(userinfoForm.getUserName()) ;
	   user.setPassword(userinfoForm.getPassword());
	   user.setMobile(userinfoForm.getMobile());
	   user.setEmail(userinfoForm.getEmail());
	   uiDao.save(user);
	   return this.queryByPage(mapping, form, request, response);
	}
	
	public ActionForward list(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
	   System.out.println("into list action");
	   List list=uiDao.findAll();
	   request.setAttribute("list", list);
	   return mapping.findForward("list");
	}
	
	public ActionForward delete(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
	   System.out.println("into delete action");
	   String id=request.getParameter("id");
	   user=uiDao.findById(id);
	   uiDao.delete(user);
	   return this.queryByPage(mapping, form, request, response);
	}
	public ActionForward edit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException {
	   System.out.println("into edit action");
	   String id=request.getParameter("id");
	   user=uiDao.findById(id);
	   JSONObject obj=JSONObject.fromObject(user);System.out.println(obj.toString());
	   response.getWriter().write(obj.toString());
	   response.getWriter().flush();
	   response.getWriter().close();
	   return null;
	}
	
	public ActionForward update(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
	   System.out.println("into update action");
	   UserinfoForm userinfoForm = (UserinfoForm) form;
	   user.setUserId(request.getParameter("userId"));
	   user.setUserName(userinfoForm.getUserName());
	   user.setPassword(userinfoForm.getPassword());
	   user.setMobile(userinfoForm.getMobile());
	   user.setEmail(userinfoForm.getEmail());
	   uiDao.attachDirty(user);
	   return this.queryByPage(mapping, form, request, response);
	}
	//6-15加，为了实现那个更新个人信息。
	public ActionForward updateMyInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
	   System.out.println("into updateMyInfo action");
	   UserinfoForm userinfoForm = (UserinfoForm) form;
	   user.setUserId(request.getParameter("userId"));
	   user.setUserName(userinfoForm.getUserName());
	   user.setPassword(userinfoForm.getPassword());
	   user.setMobile(userinfoForm.getMobile());
	   user.setEmail(userinfoForm.getEmail());
	   uiDao.attachDirty(user);
	   return mapping.findForward("firstPageUpdate");
	}
	public ActionForward getCountNum(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
	   System.out.println("into getCountNum action");
	   
	   System.out.println(uiDao.count());
	   return null;
	}
	
	public ActionForward queryByPage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
	   System.out.println("into queryByPage action");
	   String hql="from Userinfo";
	   int firstResult=0;
	   int maxResult=10;
	   if(request.getParameter("firstResult")==null){
		   firstResult=0;
		}else{
		   firstResult=Integer.parseInt(request.getParameter("firstResult"));
		}
	   
	   int totalNum=uiDao.count();
	 
	   int totalPage=0;
	   if(totalNum%maxResult==0){
	     totalPage=totalNum/maxResult;
	   }else{
	     totalPage=totalNum/maxResult+1;
	   }
	   int currentPage=firstResult/maxResult+1;
		   //下一页时候firstresult和muxrult各加3
	   
	   List list=uiDao.listByPage(hql, firstResult, maxResult);
	   request.setAttribute("list", list);
	  
	   request.setAttribute("firstResult",Integer.valueOf(firstResult));
	   request.setAttribute("maxResult",Integer.valueOf(maxResult));
	   request.setAttribute("totalNum", Integer.valueOf(totalNum));
	   request.setAttribute("totalPage", Integer.valueOf(totalPage));
	   request.setAttribute("currentPage", Integer.valueOf(currentPage));
	   return mapping.findForward("list");
	}
	
	public ActionForward login(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
	   System.out.println("into login action");
	   UserinfoForm loginForm = (UserinfoForm) form;
	     String role=request.getParameter("role");
	     String username=loginForm.getUserName();
	     String password=loginForm.getPassword();
	     System.out.println(username);
	     System.out.println(password);
	     System.out.println(role);
	     if("user".equals(role)){
	    	 System.out.println("into user if");
	    	  List list=uiDao.findByUserNameAndPwd(username,password);
	    	  if(list.get(0)!=null){   		
	    	   request.getSession().setAttribute("username", username);
	    	   return mapping.findForward("userlogin");
	    	 }else{
	    		 return mapping.findForward("success");
	    	 }
	     }else if("admin".equals(role)){
	    	 if(username.equals("admin")&&password.equals("111"))
	         return this.queryByPage(mapping, form, request, response);
	     }
	
	return null;
	   
	   
	  
	}
	//ajax,为了根据username查出user，进而找到userid
	public ActionForward findByUserName(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException {
	   System.out.println("into findByUserName action");
	   String username=request.getParameter("username");
	   System.out.println(username);
	   List list=uiDao.findByUserName(username);
	   System.out.println(list.get(0));
	   JSONObject json=JSONObject.fromObject(list.get(0));
	
	   response.getWriter().print(json.toString());
	   return null;
	}
	
	Userinfo user;
	public Userinfo getUser() {
		return user;
	}

	public void setUser(Userinfo user) {
		this.user = user;
	}
	UserinfoDAO uiDao;

	public UserinfoDAO getUiDao() {
		return uiDao;
	}

	public void setUiDao(UserinfoDAO uiDao) {
		this.uiDao = uiDao;
	}
	
}